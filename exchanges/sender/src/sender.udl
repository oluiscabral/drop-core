[Error]
enum SenderError {
    "TODO",
};

// REQUEST ->
dictionary SendFilesRequest {
    SenderProfile profile;
    sequence<SenderFile> files;
};

dictionary SenderProfile {
    string name;
};

dictionary SenderFile {
    string name;
    SenderFileData data;
};

[Trait, WithForeign]
interface SenderFileData {
    u64 len();
    u8? read();
};
// <- REQUEST

// RESPONSE ->
interface SendFilesBubble {
    string get_ticket();
    u8 get_confirmation();
    void finish();
    boolean get_is_finished();
    string get_created_at();
    void subscribe(SendFilesSubscriber subscriber);
    void unsubscribe(SendFilesSubscriber subscriber);
};

[Trait, WithForeign]
interface SendFilesSubscriber {
    string get_id();
    void notify_sending(SendFilesSendingEvent event);
    void notify_connecting(SendFilesConnectingEvent event);
};

dictionary SendFilesSendingEvent  {
    string name;
    u64 sent;
    u64 remaining;
};

dictionary SendFilesConnectingEvent   {
    SendFilesProfile receiver;
};

dictionary SendFilesProfile {
    string id;
    string name;
};
// <- RESPONSE

namespace sender {
    [Throws=SenderError, Async]
    SendFilesBubble send_files(SendFilesRequest request);
};
