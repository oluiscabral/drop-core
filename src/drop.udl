[Error]
enum Error {
    "CreateEndpointError",
    "ReadOwnEndpointAddressError",
    "CreateSendFilesRouterError",
    "ParseReceiveFilesTicketError",
    "CreateReceiveFilesConnectionError",
    "CreateBidirectionalCommunicationError",
    "ActivateBidirectionalCommunicationError",
    "FinishCommunicationInputError",
    "ReadCommunicationOutputError",
    "DeserializeFileProjectionError",
};

dictionary SendFilesRequest {
  sequence<FilePayload> files;
};

dictionary FilePayload {
  string name;
  sequence<u8> data;
};

dictionary SendFilesResponse {
  string ticket;
  u8 confirmation;
};

dictionary ReceiveFilesRequest {
  string ticket;
  u8 confirmation;
};

dictionary ReceiveFilesResponse {
  sequence<FileOutput> files;
};

dictionary FileOutput {
  string id;
  string name;
  sequence<u8> data;
};

interface Drop {
  [Throws=Error]
  constructor();
  [Throws=Error, Async]
  SendFilesResponse send_files(SendFilesRequest request);
  [Throws=Error, Async]
  ReceiveFilesResponse receive_files(ReceiveFilesRequest request);
};

namespace drop {};
